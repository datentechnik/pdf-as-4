<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<!-- General description of your web application -->

	<display-name>PDF-AS-WEB</display-name>
	<description>
		PDF-AS-WEB Application
	</description>
	<filter>
		<filter-name>ExceptionCatchFilter</filter-name>
		<display-name>ExceptionCatchFilter</display-name>
		<description></description>
		<filter-class>at.gv.egiz.pdfas.web.filter.ExceptionCatchFilter</filter-class>
	</filter>
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ExceptionCatchFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>SignServlet</servlet-name>
		<description>
			The Sign Servlet allows Users to Sign PDF Documents ...
		</description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ExternSignServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>ProvidePDF</servlet-name>
		<display-name>ProvidePDF</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ProvidePDFServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DataURLServlet</servlet-name>
		<display-name>DataURLServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.DataURLServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>VerifyServlet</servlet-name>
		<display-name>VerifyServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.VerifyServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PDFData</servlet-name>
		<display-name>PDFData</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.PDFData</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ErrorPage</servlet-name>
		<display-name>ErrorPage</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ErrorPage</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>TestServlet</servlet-name>
		<display-name>TestServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.TestServlet</servlet-class>
	</servlet>

	<!-- Define mappings that are used by the servlet container to translate 
		a particular request URI (context-relative) to a particular servlet. The 
		examples below correspond to the servlet descriptions above. Thus, a request 
		URI like: http://localhost:8080/{contextpath}/graph will be mapped to the 
		"graph" servlet, while a request like: http://localhost:8080/{contextpath}/saveCustomer.do 
		will be mapped to the "controller" servlet. You may define any number of 
		servlet mappings, including zero. It is also legal to define more than one 
		mapping for the same servlet, if you wish to. -->

	<servlet-mapping>
		<servlet-name>SignServlet</servlet-name>
		<url-pattern>/Sign</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ProvidePDF</servlet-name>
		<url-pattern>/ProvidePDF</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DataURLServlet</servlet-name>
		<url-pattern>/DataURL</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>VerifyServlet</servlet-name>
		<url-pattern>/VerifyServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PDFData</servlet-name>
		<url-pattern>/PDFData</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ErrorPage</servlet-name>
		<url-pattern>/ErrorPage</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>TestServlet</servlet-name>
		<url-pattern>/TestServlet</url-pattern>
	</servlet-mapping>

	<!-- Define the default session timeout for your application, in minutes. 
		From a servlet or JSP page, you can modify the timeout for a particular session 
		dynamically by using HttpSession.getMaxInactiveInterval(). -->

	<session-config>
		<session-timeout>30</session-timeout>    <!-- 30 minutes -->
	</session-config>

	<welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>