<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app>
	<!-- General description of your web application -->

	<display-name>PDF-AS-WEB</display-name>
	<description>
		PDF-AS-WEB Application
	</description>
	<filter>
		<filter-name>ExceptionCatchFilter</filter-name>
		<display-name>ExceptionCatchFilter</display-name>
		<description></description>
		<filter-class>at.gv.egiz.pdfas.web.filter.ExceptionCatchFilter</filter-class>
	</filter>
	<filter>
		<filter-name>UserAgentFilter</filter-name>
		<display-name>UserAgentFilter</display-name>
		<description></description>
		<filter-class>at.gv.egiz.pdfas.web.filter.UserAgentFilter</filter-class>
	</filter>
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
		<init-param>
                <param-name>cors.allowOrigin</param-name>
                <param-value>*</param-value>
        </init-param>
	</filter>
	<!-- A filter that sets character encoding that is used to decode -->
	<!-- parameters in a POST request -->
	<filter>
		<filter-name>setCharacterEncodingFilter</filter-name>
		<filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<!-- The mapping for the Set Character Encoding Filter -->
	<filter-mapping>
		<filter-name>setCharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->
	
	<filter-mapping>
		<filter-name>ExceptionCatchFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>UserAgentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- listener>
	    <listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
	</listener-->
	
	
	<!-- servlet>
	    <servlet-name>SOAPSign</servlet-name>
	    <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
	</servlet-->
	<servlet>
		<servlet-name>SignServlet</servlet-name>
		<description>
			The Sign Servlet allows Users to Sign PDF Documents ...
		</description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ExternSignServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<display-name>CXFServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.SoapServiceServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ProvidePDF</servlet-name>
		<display-name>ProvidePDF</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ProvidePDFServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DataURLServlet</servlet-name>
		<display-name>DataURLServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.DataURLServlet</servlet-class>
	</servlet>
 	<servlet>
		<servlet-name>SLDataURLServlet</servlet-name>
		<display-name>SLDataURLServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.SLDataURLServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>VisBlockServlet</servlet-name>
		<display-name>VisBlockServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.VisBlockServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>VerifyServlet</servlet-name>
		<display-name>VerifyServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.VerifyServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PDFData</servlet-name>
		<display-name>PDFData</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.PDFData</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ErrorPage</servlet-name>
		<display-name>ErrorPage</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ErrorPage</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PDFVerifyData</servlet-name>
		<display-name>PDFVerifyData</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.PDFSignatureData</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PDFVerifyCert</servlet-name>
		<display-name>PDFVerifyCert</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.PDFSignatureCertificateData</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ReloadServlet</servlet-name>
		<display-name>ReloadServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.ReloadServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>UIEntryPointServlet</servlet-name>
		<display-name>UIEntryPointServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.UIEntryPointServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>QRPlaceholderGenerator</servlet-name>
		<display-name>QRPlaceholderGenerator</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.PlaceholderGeneratorServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>JSONAPIServlet</servlet-name>
		<display-name>JSONAPIServlet</display-name>
		<description></description>
		<servlet-class>at.gv.egiz.pdfas.web.servlets.JSONAPIServlet</servlet-class>
	</servlet>


	<!-- Define mappings that are used by the servlet container to translate 
		a particular request URI (context-relative) to a particular servlet. The 
		examples below correspond to the servlet descriptions above. Thus, a request 
		URI like: http://localhost:8080/{contextpath}/graph will be mapped to the 
		"graph" servlet, while a request like: http://localhost:8080/{contextpath}/saveCustomer.do 
		will be mapped to the "controller" servlet. You may define any number of 
		servlet mappings, including zero. It is also legal to define more than one 
		mapping for the same servlet, if you wish to. -->

	<!-- servlet-mapping>
		<servlet-name>SOAPSign</servlet-name>
		<url-pattern>/wssign</url-pattern>
	</servlet-mapping -->
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SignServlet</servlet-name>
		<url-pattern>/Sign</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>VisBlockServlet</servlet-name>
	    <url-pattern>/visblock</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ProvidePDF</servlet-name>
		<url-pattern>/ProvidePDF</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ReloadServlet</servlet-name>
		<url-pattern>/Reload</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DataURLServlet</servlet-name>
		<url-pattern>/DataURL</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SLDataURLServlet</servlet-name>
		<url-pattern>/DataURLSL20</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>VerifyServlet</servlet-name>
		<url-pattern>/Verify</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PDFData</servlet-name>
		<url-pattern>/PDFData</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ErrorPage</servlet-name>
		<url-pattern>/ErrorPage</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PDFVerifyData</servlet-name>
		<url-pattern>/signData</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PDFVerifyCert</servlet-name>
		<url-pattern>/signCert</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>UIEntryPointServlet</servlet-name>
		<url-pattern>/userentry</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>QRPlaceholderGenerator</servlet-name>
		<url-pattern>/placeholder</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>JSONAPIServlet</servlet-name>
		<url-pattern>/api/v1/sign</url-pattern>
	</servlet-mapping>


	<!-- Define the default session timeout for your application, in minutes. 
		From a servlet or JSP page, you can modify the timeout for a particular session 
		dynamically by using HttpSession.getMaxInactiveInterval(). -->

	<session-config>
		<session-timeout>30</session-timeout>    <!-- 30 minutes -->
	</session-config>

	<welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>